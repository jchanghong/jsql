/*
 * Java-based distributed database like Mysql
 */

/*
 * Java-based distributed database like Mysql
 */

package io.jsql.wireshark


/**
\* Created with IntelliJ IDEA.
\* User: jiang
\* Date: 2017/10/5 0005
\* Time: 11:58
用wireshark抓取包。
直接返回这个原数据。
\*/
object Wireshck {
    val servergreeting = byteArrayOf(0x59, 0x00, 0x00, 0x00, 0x0a, 0x35, 0x2e, 0x35, 0x2e, 0x35, 0x2d, 0x31, 0x30, 0x2e, 0x31, 0x2e
    ,0x32,0x33,0x2d,0x4d,0x61,0x72,0x69,0x61,0x44,0x42,0x00,0x75,0x00,0x00,0x00,0x38
    ,0x2d,0x77,0x31,0x2d,0x2f,0x40,0x38,0x00, 0xff.toByte(), 0xf7.toByte(),0x21,0x02,0x00,0x3f, 0xa0.toByte(),0x15
    ,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x36,0x45,0x37,0x26,0x57,0x63
    ,0x6c,0x76,0x2b,0x70,0x72,0x6d,0x00,0x6d,0x79,0x73,0x71,0x6c,0x5f,0x6e,0x61,0x74
    ,0x69,0x76,0x65,0x5f,0x70,0x61,0x73,0x73,0x77,0x6f,0x72,0x64,0x00)

    val authOK = byteArrayOf(0x07, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00)


}

fun main(args: Array<String>) {
    var s = """
   07 00 00 02 00 00 00 02 00 00 00
        """
    var  builder=StringBuilder()
     s.split(" ").filter { it.trim().isNotEmpty() }.forEach {
         builder.append("0x").append(it).append(",")
     }
    println(builder.toString())

}
