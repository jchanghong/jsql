buildscript {
    ext {
        kotlinVersion = '1.1.2'
        springBootVersion = '2.0.0.M3'
    }
    repositories {
        mavenCentral()
        jcenter()
        maven { url "https://repo.spring.io/snapshot" }
        maven { url "https://repo.spring.io/milestone" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:0.9.15"
    }
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'application'
apply plugin: 'org.jetbrains.dokka'
/*
 * Java-based distributed database like Mysql
 */

//allOpen {
//    annotation("org.apache.ibatis.type.Alias")
//}
group = 'jsql'
version = '1.0'
dokka {
    outputFormat = 'html'
    outputDirectory = "$buildDir/javadoc"
}
compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

repositories {
    mavenCentral()
    maven { url "https://repo.spring.io/snapshot" }
    maven { url "https://repo.spring.io/milestone" }
    maven { url "http://repo.maven.apache.org/maven2" }
}
//
//configurations {
//    all*.exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
//}


sourceCompatibility = 1.8
targetCompatibility = 1.8
tasks.withType(JavaCompile) {
	options.encoding = 'UTF-8'
}
configurations {
    compile.exclude module: 'accessors-smart'
//    all*.exclude group: 'org.gradle.test.excludes', module: 'reports'
}

dependencies {

    compile fileTree(dir: 'lib', include: '*.jar')
    compile ( 'org.elasticsearch.client:rest:5.5.2')
            {
                exclude group :'commons-logging'
            }
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind'/*, version:'2.7.5'*/
    compile group: 'com.google.guava', name: 'guava', version:'19.0'
    compile group: 'com.alibaba', name: 'druid', version:'1.0.26'
    compile group: 'mysql', name: 'mysql-connector-java'
    compile group: 'joda-time', name: 'joda-time', version:'2.9.9'
    compile group: 'com.github.shyiko', name: 'mysql-binlog-connector-java', version:'0.4.1'
    compile ( 'com.esotericsoftware.kryo:kryo:2.10')

                {
                    exclude group :'com.esotericsoftware.reflectasm'
                }

    compile group: 'commons-lang', name: 'commons-lang', version:'2.6'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-aop'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-test'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-cache'
    compile group: 'javax.cache', name: 'cache-api', version:'1.0.0'
    compile group: 'org.ehcache', name: 'ehcache', version:'3.3.1'
    compile group: 'com.orientechnologies', name: 'orientdb-core', version:'3.0.0m1'
    compile group: 'com.hazelcast', name: 'hazelcast', version:'3.8.1'
    compile group: 'io.netty', name: 'netty-all', version:'4.1.9.Final'
    compile group: 'org.jetbrains.kotlin', name: 'kotlin-stdlib-jre8', version:'1.1.2-3'
    testCompile(group: 'org.springframework.boot', name: 'spring-boot-starter-test') {
exclude(module: 'commons-logging')
    }
    testCompile group: 'org.jetbrains.kotlin', name: 'kotlin-test', version:'1.1.2-3'
    compile "org.jetbrains.kotlin:kotlin-reflect"
}
bootJar  {
    mainClass = 'io.jsql.SpringMain'
}
mainClassName = "io.jsql.SpringMain"